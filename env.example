# PostgreSQL Migration Environment Variables
# Copy this file to .env.local and update with your actual values

# ===========================================
# PostgreSQL Configuration (REQUIRED)
# ===========================================

# PostgreSQL Direct Connection (for migrations, admin tasks)
# Use your actual PostgreSQL connection details
POSTGRES_URL=postgres://postgres:9uxcC0910qGwI2s5UNDMFWiEJ9Z93Br1Ev4gN2vwiwPrWnKRia2SRjzyDZi4P2hu@173.212.192.163:5432/rollthepay

# PgBouncer Connection (for application queries via port 6432)
# Use your actual PgBouncer connection details
PGBOUNCER_URL=postgres://postgres:9uxcC0910qGwI2s5UNDMFWiEJ9Z93Br1Ev4gN2vwiwPrWnKRia2SRjzyDZi4P2hu@173.212.192.163:6432/rollthepay


# Application database URL (Next.js will use PgBouncer)
# This should point to your PgBouncer connection
DATABASE_URL=postgres://postgres:9uxcC0910qGwI2s5UNDMFWiEJ9Z93Br1Ev4gN2vwiwPrWnKRia2SRjzyDZi4P2hu@173.212.192.163:6432/rollthepay

# Connection pool configuration
PGPOOL_MAX=20
PGPOOL_IDLE_TIMEOUT=30000
PGPOOL_CONNECTION_TIMEOUT=10000

# Migration configuration
MIGRATION_BATCH_SIZE=5000

# Admin API authentication (generate a secure random key)
# Use a strong, random API key for admin operations
ADMIN_API_KEY=5414f33c1cc79f618d7f6dc83b9be6339849d44fd896d523954645189f298bb9

# ===========================================
# TEMPORARY: Filebrowser Configuration
# ===========================================
# These are ONLY needed during migration from Filebrowser to PostgreSQL
# DELETE these lines after successful migration

# Filebrowser server base URL
FILEBROWSER_BASE_URL=https://fbr.serveriko.com/

# Filebrowser API key for authentication
FILEBROWSER_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiIiLCJuYW1lIjoicnRwIiwiY3JlYXRlZEF0IjoxNzYwNzczODYzLCJleHBpcmVzQXQiOjE4MTI2MTM4NjMsImJlbG9uZ3NUbyI6MSwiUGVybWlzc2lvbnMiOnsiYXBpIjp0cnVlLCJhZG1pbiI6dHJ1ZSwibW9kaWZ5Ijp0cnVlLCJzaGFyZSI6dHJ1ZSwicmVhbHRpbWUiOmZhbHNlLCJkZWxldGUiOnRydWUsImNyZWF0ZSI6dHJ1ZSwiZG93bmxvYWQiOmZhbHNlfX0.EMAHc_Ib5cyN_3HyBsh2VgoAVvCkysfZbfJO9SnwuJU


# ===========================================
# Migration Instructions
# ===========================================

# 1. Copy this file to .env.local
# 2. Update POSTGRES_URL with your actual PostgreSQL connection details
# 3. Update PGBOUNCER_URL with your actual PgBouncer connection details
# 4. Set DATABASE_URL to the same as PGBOUNCER_URL
# 5. Generate a secure ADMIN_API_KEY
# 6. For migration only: Set FILEBROWSER_* variables
# 7. Run: npm run db:setup
# 8. Run: npm run db:migrate
# 9. Run: npm run db:validate
# 10. After successful migration: DELETE FILEBROWSER_* variables

# ===========================================
# Security Notes
# ===========================================

# - Never commit .env.local to version control
# - Use strong, unique passwords for PostgreSQL
# - Generate a secure, random ADMIN_API_KEY
# - Keep your database credentials secure
# - Use environment variables in production (Coolify, Vercel, etc.)
# - The internal host (rgkcwo4scksoogs4cogco8gk) is only accessible within Coolify's network
# ===========================================
# Migration History (COMPLETED)
# ===========================================
# ✅ Database schema created with 51 columns
# ✅ 366,980 records migrated from Filebrowser
# ✅ 111 countries, 133 states, 737 locations indexed
# ✅ All salary fields user-editable and ready
# ✅ Admin APIs operational for CRUD operations
# ✅ Performance optimized with proper indexing

# ===========================================
# Logging Configuration
# ===========================================
# Log levels: 0=ERROR, 1=WARN, 2=INFO, 3=DEBUG
# Production: 1 (WARN and above only)
# Development: 3 (all logs)
LOG_LEVEL=1

# Enable detailed query logging (development only)
DEBUG_QUERIES=false

# ===========================================
# Build Configuration
# ===========================================
# Set to 'true' to skip dynamic sitemap generation during build
# Useful when database is not available during build time
SKIP_SITEMAP_GENERATION=false

# Set to 'true' to skip all database queries during build
# Prevents database connection attempts during static generation
SKIP_DB_DURING_BUILD=false