# PostgreSQL 17 High-Performance Tuning Configuration
# For RollThePay with 25M+ records and high concurrent reads/writes

# ===========================================
# Memory Configuration
# ===========================================

# Shared memory for caching (adjust based on available RAM)
# Recommended: 25% of total RAM for dedicated PostgreSQL server
# Example: 8GB RAM = 2GB shared_buffers
shared_buffers = 2GB

# Working memory for complex queries (per connection)
# Higher values improve query performance but use more RAM per connection
work_mem = 64MB

# Effective cache size (total RAM available for caching)
# Should be set to total RAM minus shared_buffers
effective_cache_size = 6GB

# Maintenance work memory for VACUUM, CREATE INDEX, etc.
maintenance_work_mem = 512MB

# ===========================================
# WAL (Write-Ahead Logging) Configuration
# ===========================================

# WAL buffer size (in shared memory)
wal_buffers = 64MB

# WAL segment size (16MB is default and recommended)
wal_segment_size = 16MB

# Checkpoint configuration
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9
max_wal_size = 4GB
min_wal_size = 1GB

# WAL archiving (for backup and replication)
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
archive_timeout = 300

# ===========================================
# Connection Configuration
# ===========================================

# Maximum number of connections
max_connections = 200

# Connection timeout
tcp_keepalives_idle = 600
tcp_keepalives_interval = 30
tcp_keepalives_count = 3

# ===========================================
# Query Planning and Execution
# ===========================================

# Random page cost (SSD optimization)
random_page_cost = 1.1

# Effective I/O concurrency (SSD optimization)
effective_io_concurrency = 200

# Parallel query configuration
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

# ===========================================
# Logging Configuration
# ===========================================

# Log level
log_min_messages = warning
log_min_error_statement = error
log_min_duration_statement = 1000

# Log slow queries (queries taking more than 1 second)
log_statement = 'none'
log_duration = off
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Log connections and disconnections
log_connections = on
log_disconnections = on

# Log lock waits
log_lock_waits = on

# ===========================================
# Autovacuum Configuration
# ===========================================

# Enable autovacuum
autovacuum = on

# Autovacuum workers
autovacuum_max_workers = 3

# Autovacuum thresholds
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05

# Autovacuum cost limits
autovacuum_vacuum_cost_delay = 2ms
autovacuum_vacuum_cost_limit = 2000

# ===========================================
# Statistics Configuration
# ===========================================

# Statistics collection
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all

# Statistics targets
default_statistics_target = 100

# ===========================================
# Lock Configuration
# ===========================================

# Deadlock detection
deadlock_timeout = 1s

# Lock timeout
lock_timeout = 0

# ===========================================
# Replication Configuration (if using streaming replication)
# ===========================================

# Streaming replication
wal_level = replica
max_wal_senders = 10
max_replication_slots = 10
hot_standby = on

# Replication lag
wal_receiver_timeout = 60s
wal_sender_timeout = 60s

# ===========================================
# Security Configuration
# ===========================================

# SSL configuration (if using SSL)
ssl = on
ssl_cert_file = 'server.crt'
ssl_key_file = 'server.key'

# Password encryption
password_encryption = scram-sha-256

# ===========================================
# Performance Monitoring
# ===========================================

# Enable query statistics
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.track_utility = on

# ===========================================
# RollThePay Specific Optimizations
# ===========================================

# Optimize for read-heavy workload
default_transaction_isolation = 'read committed'

# Optimize for batch operations
synchronous_commit = on
fsync = on
full_page_writes = on

# Optimize for JSONB operations (skills data)
gin_fuzzy_search_limit = 0

# ===========================================
# Configuration Notes
# ===========================================

# 1. Adjust shared_buffers based on available RAM:
#    - 1GB for 4GB RAM
#    - 2GB for 8GB RAM  
#    - 4GB for 16GB RAM
#    - 8GB for 32GB RAM

# 2. Adjust work_mem based on concurrent connections:
#    - 32MB for 100 connections
#    - 64MB for 200 connections
#    - 128MB for 100 connections (if RAM allows)

# 3. Monitor these metrics:
#    - Cache hit ratio (should be >95%)
#    - Connection count
#    - WAL generation rate
#    - Checkpoint frequency
#    - Lock waits

# 4. For production deployment:
#    - Use connection pooling (PgBouncer)
#    - Enable WAL archiving for backups
#    - Set up streaming replication for high availability
#    - Monitor query performance with pg_stat_statements

# 5. For development:
#    - Reduce shared_buffers to 256MB
#    - Reduce work_mem to 16MB
#    - Disable WAL archiving
#    - Reduce max_connections to 50
